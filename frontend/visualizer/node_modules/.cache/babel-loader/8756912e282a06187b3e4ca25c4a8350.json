{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\datrij\\\\Documents\\\\GitHub\\\\ReactVisualizer\\\\frontend\\\\visualizer\\\\src\\\\App.js\";\nimport './App.css';\nimport { DataSet, Network } from \"vis-network/standalone\"; //Nodes for the array\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodes = new DataSet([{\n  id: 1,\n  label: \"Node 1\"\n}, {\n  id: 2,\n  label: \"Node 2\"\n}, {\n  id: 3,\n  label: \"Node 3\"\n}, {\n  id: 4,\n  label: \"Node 4\"\n}, {\n  id: 5,\n  label: \"Node 5\"\n}]);\nconst edges = new DataSet([{\n  from: 1,\n  to: 3\n}, {\n  from: 1,\n  to: 2\n}, {\n  from: 2,\n  to: 4\n}, {\n  from: 2,\n  to: 5\n}, {\n  from: 3,\n  to: 3\n}]);\nconst container = document.getElementById(\"mynetwork\");\nconst data = {\n  nodes: nodes,\n  edges: edges\n};\nconst options = {};\nconst network = new Network(container, data, options);\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"mynetwork\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["DataSet","Network","nodes","id","label","edges","from","to","container","document","getElementById","data","options","network","App"],"sources":["C:/Users/datrij/Documents/GitHub/ReactVisualizer/frontend/visualizer/src/App.js"],"sourcesContent":["import './App.css';\r\nimport { DataSet, Network } from \"vis-network/standalone\";\r\n\r\n//Nodes for the array\r\nconst nodes = new DataSet([\r\n  { id: 1, label: \"Node 1\"},\r\n  { id: 2, label: \"Node 2\"},\r\n  { id: 3, label: \"Node 3\"},\r\n  { id: 4, label: \"Node 4\"},\r\n  { id: 5, label: \"Node 5\"}\r\n]);\r\n\r\nconst edges = new DataSet([\r\n  { from: 1, to: 3},\r\n  { from: 1, to: 2},\r\n  { from: 2, to: 4},\r\n  { from: 2, to: 5},\r\n  { from: 3, to: 3}\r\n]);\r\n\r\nconst container = document.getElementById(\"mynetwork\");\r\nconst data = {\r\n  nodes: nodes,\r\n  edges: edges\r\n};\r\nconst options = {};\r\nconst network = new Network(container, data, options);\r\n\r\nfunction App() {\r\n  return (\r\n    <div id=\"mynetwork\"></div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";AAAA,OAAO,WAAP;AACA,SAASA,OAAT,EAAkBC,OAAlB,QAAiC,wBAAjC,C,CAEA;;;AACA,MAAMC,KAAK,GAAG,IAAIF,OAAJ,CAAY,CACxB;EAAEG,EAAE,EAAE,CAAN;EAASC,KAAK,EAAE;AAAhB,CADwB,EAExB;EAAED,EAAE,EAAE,CAAN;EAASC,KAAK,EAAE;AAAhB,CAFwB,EAGxB;EAAED,EAAE,EAAE,CAAN;EAASC,KAAK,EAAE;AAAhB,CAHwB,EAIxB;EAAED,EAAE,EAAE,CAAN;EAASC,KAAK,EAAE;AAAhB,CAJwB,EAKxB;EAAED,EAAE,EAAE,CAAN;EAASC,KAAK,EAAE;AAAhB,CALwB,CAAZ,CAAd;AAQA,MAAMC,KAAK,GAAG,IAAIL,OAAJ,CAAY,CACxB;EAAEM,IAAI,EAAE,CAAR;EAAWC,EAAE,EAAE;AAAf,CADwB,EAExB;EAAED,IAAI,EAAE,CAAR;EAAWC,EAAE,EAAE;AAAf,CAFwB,EAGxB;EAAED,IAAI,EAAE,CAAR;EAAWC,EAAE,EAAE;AAAf,CAHwB,EAIxB;EAAED,IAAI,EAAE,CAAR;EAAWC,EAAE,EAAE;AAAf,CAJwB,EAKxB;EAAED,IAAI,EAAE,CAAR;EAAWC,EAAE,EAAE;AAAf,CALwB,CAAZ,CAAd;AAQA,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAlB;AACA,MAAMC,IAAI,GAAG;EACXT,KAAK,EAAEA,KADI;EAEXG,KAAK,EAAEA;AAFI,CAAb;AAIA,MAAMO,OAAO,GAAG,EAAhB;AACA,MAAMC,OAAO,GAAG,IAAIZ,OAAJ,CAAYO,SAAZ,EAAuBG,IAAvB,EAA6BC,OAA7B,CAAhB;;AAEA,SAASE,GAAT,GAAe;EACb,oBACE;IAAK,EAAE,EAAC;EAAR;IAAA;IAAA;IAAA;EAAA,QADF;AAGD;;KAJQA,G;AAMT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}