{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\datrij\\\\Documents\\\\GitHub\\\\ReactVisualizer\\\\frontend\\\\visualizer\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Graph from \"react-graph-vis\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  layout: {\n    hierarchical: false\n  },\n  edges: {\n    color: \"#000000\"\n  }\n};\n\nconst App = () => {\n  _s();\n\n  const createNode = (x, y) => {\n    const color = red;\n    setState(_ref => {\n      let {\n        graph: {\n          nodes,\n          edges\n        },\n        counter,\n        ...rest\n      } = _ref;\n      const id = counter + 1;\n      const from = Math.floor(Math.random() * (counter - 1)) + 1;\n      return {\n        graph: {\n          nodes: [...nodes, {\n            id,\n            label: `Node ${id}`,\n            color,\n            x,\n            y\n          }],\n          edges: [...edges, {\n            from,\n            to: id\n          }]\n        },\n        counter: id,\n        ...rest\n      };\n    });\n  };\n\n  const [state, setState] = useState({\n    counter: 5,\n    graph: {\n      nodes: [{\n        id: 1,\n        label: \"Node 1\",\n        color: \"#e04141\"\n      }, {\n        id: 2,\n        label: \"Node 2\",\n        color: \"#e09c41\"\n      }, {\n        id: 3,\n        label: \"Node 3\",\n        color: \"#e0df41\"\n      }, {\n        id: 4,\n        label: \"Node 4\",\n        color: \"#7be041\"\n      }, {\n        id: 5,\n        label: \"Node 5\",\n        color: \"#41e0c9\"\n      }],\n      edges: [{\n        from: 1,\n        to: 2\n      }, {\n        from: 1,\n        to: 3\n      }, {\n        from: 2,\n        to: 4\n      }, {\n        from: 2,\n        to: 5\n      }]\n    },\n    events: {\n      select: _ref2 => {\n        let {\n          nodes,\n          edges\n        } = _ref2;\n        console.log(\"Selected nodes:\");\n        console.log(nodes);\n        console.log(\"Selected edges:\");\n        console.log(edges);\n        alert(\"Selected node: \" + nodes);\n      },\n      doubleClick: _ref3 => {\n        let {\n          pointer: {\n            canvas\n          }\n        } = _ref3;\n        createNode(canvas.x, canvas.y);\n      }\n    }\n  });\n  const {\n    graph,\n    events\n  } = state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React graph vis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://github.com/crubier/react-graph-vis\",\n        children: \"Github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), \" -\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.npmjs.com/package/react-graph-vis\",\n        children: \"NPM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://github.com/crubier/react-graph-vis/tree/master/example/src/index.js\",\n        children: \"Source of this page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"A React component to display beautiful network graphs using vis.js\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Make sure to visit \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"http://visjs.org\",\n        children: \"visjs.org\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }, this), \" for more info.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This package allows to render network graphs using vis.js.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Rendered graphs are scrollable, zoomable, retina ready, dynamic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"In this example, we manage state with react: on double click we create a new node, and on select we display an alert.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Graph, {\n      graph: graph,\n      options: options,\n      events: events,\n      style: {\n        height: \"640px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Ot7OWJMTQPQMB3M5Z+HgduvxWOU=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 87,\n  columnNumber: 3\n}, this), document.getElementById(\"root\"));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Graph","React","useState","ReactDOM","options","layout","hierarchical","edges","color","App","createNode","x","y","red","setState","graph","nodes","counter","rest","id","from","Math","floor","random","label","to","state","events","select","console","log","alert","doubleClick","pointer","canvas","height","render","document","getElementById"],"sources":["C:/Users/datrij/Documents/GitHub/ReactVisualizer/frontend/visualizer/src/App.js"],"sourcesContent":["import Graph from \"react-graph-vis\";\r\nimport React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst options = {\r\n  layout: {\r\n    hierarchical: false\r\n  },\r\n  edges: {\r\n    color: \"#000000\"\r\n  }\r\n};\r\n\r\nconst App = () => {\r\n  const createNode = (x, y) => {\r\n    const color = red;\r\n    setState(({ graph: { nodes, edges }, counter, ...rest }) => {\r\n      const id = counter + 1;\r\n      const from = Math.floor(Math.random() * (counter - 1)) + 1;\r\n      return {\r\n        graph: {\r\n          nodes: [\r\n            ...nodes,\r\n            { id, label: `Node ${id}`, color, x, y }\r\n          ],\r\n          edges: [\r\n            ...edges,\r\n            { from, to: id }\r\n          ]\r\n        },\r\n        counter: id,\r\n        ...rest\r\n      }\r\n    });\r\n  }\r\n  const [state, setState] = useState({\r\n    counter: 5,\r\n    graph: {\r\n      nodes: [\r\n        { id: 1, label: \"Node 1\", color: \"#e04141\" },\r\n        { id: 2, label: \"Node 2\", color: \"#e09c41\" },\r\n        { id: 3, label: \"Node 3\", color: \"#e0df41\" },\r\n        { id: 4, label: \"Node 4\", color: \"#7be041\" },\r\n        { id: 5, label: \"Node 5\", color: \"#41e0c9\" }\r\n      ],\r\n      edges: [\r\n        { from: 1, to: 2 },\r\n        { from: 1, to: 3 },\r\n        { from: 2, to: 4 },\r\n        { from: 2, to: 5 }\r\n      ]\r\n    },\r\n    events: {\r\n      select: ({ nodes, edges }) => {\r\n        console.log(\"Selected nodes:\");\r\n        console.log(nodes);\r\n        console.log(\"Selected edges:\");\r\n        console.log(edges);\r\n        alert(\"Selected node: \" + nodes);\r\n      },\r\n      doubleClick: ({ pointer: { canvas } }) => {\r\n        createNode(canvas.x, canvas.y);\r\n      }\r\n    }\r\n  })\r\n  const { graph, events } = state;\r\n  return (\r\n    <div>\r\n      <h1>React graph vis</h1>\r\n      <p>\r\n        <a href=\"https://github.com/crubier/react-graph-vis\">Github</a> -{\" \"}\r\n        <a href=\"https://www.npmjs.com/package/react-graph-vis\">NPM</a>\r\n      </p>\r\n      <p><a href=\"https://github.com/crubier/react-graph-vis/tree/master/example/src/index.js\">Source of this page</a></p>\r\n      <p>A React component to display beautiful network graphs using vis.js</p>\r\n      <p>Make sure to visit <a href=\"http://visjs.org\">visjs.org</a> for more info.</p>\r\n      <p>This package allows to render network graphs using vis.js.</p>\r\n      <p>Rendered graphs are scrollable, zoomable, retina ready, dynamic</p>\r\n      <p>In this example, we manage state with react: on double click we create a new node, and on select we display an alert.</p>\r\n      <Graph graph={graph} options={options} events={events} style={{ height: \"640px\" }} />\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById(\"root\")\r\n);"],"mappings":"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"},"metadata":{},"sourceType":"module"}